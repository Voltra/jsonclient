{"version":3,"sources":["../build-tsc/jsonclient.js"],"names":["Object","defineProperty","exports","value","Cache_1","require","Credentials_1","Mode_1","Redirect_1","Referrer_1","fetchJSON","$json","postOptions","Cache","Credentials","Mode","Redirect","Referrer","get","path","functor","post","url","data","__post_data","cache","credentials","mode","redirect","referrer","__post_allArgs","optionsObj","__post_options","payload","options","method","body","JSON","stringify","headers","finalPayload","assign","promise","Promise","resolve","reject","f","fetch","then","contentType","response","includes","json","default"],"mappings":"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","file":"jsonclient.js","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Cache_1 = require(\"./enums/Cache\");\r\nconst Credentials_1 = require(\"./enums/Credentials\");\r\nconst Mode_1 = require(\"./enums/Mode\");\r\nconst Redirect_1 = require(\"./enums/Redirect\");\r\nconst Referrer_1 = require(\"./enums/Referrer\");\r\nconst fetchJSON = require(\"fetch_json\");\r\nconst $json = {\r\n    postOptions: { Cache: Cache_1.Cache, Credentials: Credentials_1.Credentials, Mode: Mode_1.Mode, Redirect: Redirect_1.Redirect, Referrer: Referrer_1.Referrer },\r\n    get(path, functor) {\r\n        return fetchJSON(path, functor);\r\n    },\r\n    post(url, data, ...options) {\r\n        if (options.length === 0)\r\n            return this.__post_data(url, data);\r\n        if (options.length === 5) {\r\n            const cache = options[0];\r\n            const credentials = options[1];\r\n            const mode = options[2];\r\n            const redirect = options[3];\r\n            const referrer = options[4];\r\n            return this.__post_allArgs(url, data, cache, credentials, mode, redirect, referrer);\r\n        }\r\n        if (options.length === 1) {\r\n            const optionsObj = options[0];\r\n            return this.__post_options(url, data, optionsObj);\r\n        }\r\n        return null;\r\n    },\r\n};\r\nObject.defineProperty($json, \"__post_data\", {\r\n    value: function __post_data(url, data) {\r\n        return this.__post_options(url, data, {});\r\n    }\r\n});\r\nObject.defineProperty($json, \"__post_allArgs\", {\r\n    value: function __post_allArgs(url, data, cache, credentials, mode, redirect, referrer) {\r\n        const payload = {\r\n            cache,\r\n            credentials,\r\n            mode,\r\n            redirect,\r\n            referrer\r\n        };\r\n        return this.__post_options(url, data, payload);\r\n    }\r\n});\r\nObject.defineProperty($json, \"__post_options\", {\r\n    value: function __post_options(url, data, options) {\r\n        delete options[\"body\"];\r\n        delete options[\"headers\"];\r\n        delete options[\"method\"];\r\n        const payload = {\r\n            method: \"POST\",\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                \"content-type\": \"application/json\"\r\n            }\r\n        };\r\n        const finalPayload = Object.assign({}, payload, options);\r\n        const promise = new Promise((resolve, reject) => {\r\n            const f = fetch(url, finalPayload);\r\n            f.then(response => {\r\n                var contentType = response.headers.get(\"content-type\");\r\n                if (contentType && contentType.includes(\"application/json\"))\r\n                    return response.json().then(resolve);\r\n                else {\r\n                    reject(\"Something went wrong during data inspection (data is not JSON)\");\r\n                    return null;\r\n                }\r\n            });\r\n            return f;\r\n        });\r\n        return promise;\r\n    }\r\n});\r\nexports.default = $json;\r\n//# sourceMappingURL=jsonclient.js.map"]}